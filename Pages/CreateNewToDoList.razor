@page "/CreateNewToDoList";
@using Services;
@using Data;
@inject ListHandler listHandler;
@inject TaskHandler taskHandler;


<div class="pt-5">
    @if (CreateNew)
    {
        <h3>Skapa ny lista</h3>
        <br />
        <EditForm Model="@newList" OnValidSubmit="@HandleSubmit">
            <DataAnnotationsValidator />
            <InputText id="name" @bind-Value="newList.ListTitle" /> <br />
            <ValidationMessage For="@(() => newList.ListTitle)" />
            <button type="submit" class="btn-small">Skapa</button>
        </EditForm>
    }
</div>


@if (AddNewTask)
{
    <div class="pt-5">
        <p>Lägg till som Weekly-list</p>
        <input type="checkbox" value="@newList.ThisWeek" @onchange="@(() => AddForThisWeek(newList))" />
        <h3>@newList.ListTitle</h3>
        @foreach (var task in newList.Task)
        {
            <p>@task.TaskTitle</p>
        }
        <EditForm Model="@newTask" OnValidSubmit="@AddTask">
            <DataAnnotationsValidator />
            <InputText id="name" @bind-Value="newTask.TaskTitle" /> <br />
            <ValidationMessage For="@(() => newTask.TaskTitle)" />
            <button type="submit" class="btn-small">Lägg till task</button>
        </EditForm>
    </div>
}


@code {

    public CreateToDoList newList = new CreateToDoList();
    public Data.Task newTask { get; set; } = new();
    public bool AddNewTask { get; set; } = false;
    public bool CreateNew { get; set; } = true;
    public bool ThisWeek { get; set; } = false;
    Guid listID = Guid.NewGuid();

    public async System.Threading.Tasks.Task HandleSubmit()
    {
        newList = await listHandler.CreateNewToDoList(newList);
        listID = newList.Id;
        AddNewTask = !AddNewTask;
        CreateNew = false;
    }

    public async void AddTask()
    {
        newTask.CreateToDoListId = listID;
        newTask.Id = Guid.NewGuid();
        newList.Task.Add(newTask);
        await taskHandler.AddTask(newTask);
        newTask = new();
        StateHasChanged();
    }

    public async System.Threading.Tasks.Task AddForThisWeek(CreateToDoList newList)
    {
        newList.ThisWeek = true;
        await listHandler.UpdateList(newList);
    }





    
}
